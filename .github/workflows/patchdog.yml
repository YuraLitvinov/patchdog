name: Run patchdog - AI engine

on:
  pull_request_review:
    types: [submitted]
  pull_request:
env:
  CARGO_TERM_COLOR: always

jobs:
  Run_patchdog:

    runs-on: ubuntu-latest
    permissions: 
      contents: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0
      - name: Check for merge conflicts 
        run: |
          if  git diff --check |grep -i conflict  > /dev/null; then
            exit 0
          else
            exit 1
          fi
      - name: Run a command and export it as env
        run: |
          echo "PATCHDOG_BRANCH=$(uuidgen)" >> $GITHUB_ENV
      - name: Fetch branch
        run: git fetch origin ${{ github.base_ref }}
      - name: Make patch
        run: git diff origin/${{ github.base_ref }}...${{ github.head_ref }} > base_head.patch
      - name: Run patchdog
        run: cargo run -- --file-patch base_head.patch
        env:
          API_KEY_GEMINI: ${{ secrets.API_KEY_GEMINI }}
      - name: Cleanup patch
        run: rm base_head.patch
      - name: Show status
        run: git status
      - name: Generate patch
        run: git diff HEAD > $PATCHDOG_BRANCH.patch 
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload patch file - review changes before they are applied
        uses: actions/upload-artifact@v4
        with:
          name: patch-file
          path: $PATCHDOG_BRANCH.patch
      - name: Cleanup patch
        run: rm $PATCHDOG_BRANCH.patch
      - name: Checkout into new branch, create PR
        run: |
          git config --global user.email "noreply@patchdog.ua"
          git config --global user.name "Patchdog Patchdogovich"
          git checkout -b $PATCHDOG_BRANCH
          git add .
          git commit -m "Patchdog-${PATCHDOG_BRANCH}"
          git push origin $PATCHDOG_BRANCH
          gh pr create --title "Patchdog-${PATCHDOG_BRANCH}" --body "Patchdog-${PATCHDOG_BRANCH}" --head ${PATCHDOG_BRANCH} --base ${{ github.head_ref }} --assignee ${{ github.event.pull_request.user.login }} --draft
        env: 
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}